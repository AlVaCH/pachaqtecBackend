1.Insertar un documento en una colección llamada "usuarios".
db.usuarios.insertOne({
name: "Manuel",
edad: 49
});

2.Insertar varios documentos en la colección "usuarios".
db.usuarios.insertMany([
{
name: "Manuel",
edad: 49
},
{
name: "Fernando",
edad: 35
}
]);


3.Actualizar el campo "edad" del documento con nombre "Juan" en la colección "usuarios".
db.usuarios.updateOne({name: "teclado"},{
$set: {
precio: 15
}
});


4.Actualizar varios documentos en la colección "usuarios" que cumplan cierta condición.

db.productos.updateMany({area: "tecnología"},{
$set: {
precio: 20
}
});

5.Eliminar un documento con nombre "Ana" de la colección "usuarios".
db.usuarios.deleteOne({name: "Ana"});

6.Eliminar varios documentos de la colección "usuarios" que cumplan cierta condición.
db.usuarios.deleteMany({apellido: "Perez"});

7.Buscar todos los documentos en la colección "usuarios".
db.usuarios.find();

8.Buscar un documento con nombre "Juan" en la colección "usuarios".
db.usuarios.find({name: "Juan"});

9.Buscar documentos en la colección "usuarios" que cumplan cierta condición (por ejemplo, edad mayor a 25).
db.usuarios.find({
	edad:{"$gt":25}	
});


10.Buscar documentos en la colección "usuarios" con proyección (solo mostrar el campo "nombre").
db.usuarios.find({},{nombre:1});

11.Buscar documentos en la colección "usuarios" ordenados por edad de forma ascendente.
db.usuarios.find().sort({ name: 1 });


12.Buscar documentos en la colección "usuarios" limitando el número de resultados a 5.
db.usuarios.find().limit(5);

13.Buscar documentos en la colección "usuarios" utilizando expresiones regulares (por ejemplo, buscar nombres que 14.empiecen con "J").
db.usuarios.find(
	{
	nombre:{"$regex":"^J"}
	}
);

14.Contar la cantidad de documentos en la colección "usuarios".
db.usuarios.countDocuments();

15.Contar la cantidad de documentos en la colección "usuarios" que cumplan cierta condición.
db.usuarios.countDocuments({
	nombre:{"$regex":"^J"}
	});

16.Agregar un nuevo campo "activo" con valor booleano a todos los documentos de la colección "usuarios".
db.usuarios.updateMany({name: "Pedro"},{
$set: {
estado: "Activo"
}},
{
     upsert: true});

17.Ordenar los documentos en la colección "usuarios" por nombre en orden descendente.
db.usuarios.find().sort({ name: -1 });


18.Buscar documentos en la colección "usuarios" que tengan una lista de ciudades específicas.
db.nombre_coleccion.find({
	$or:[
		{ciudades: "Lima"},
		{ciudades: "Arequipa"},
		{ciudades: "Chiclayo"}
	
	]
}
);

19.Actualizar un campo en todos los documentos de la colección "usuarios" utilizando un valor incremental.
db.usuarios.updateMany({},
{ $inc: { edad: 1
}});

20.Eliminar todos los documentos de la colección "usuarios".
db.usuarios.drop()
