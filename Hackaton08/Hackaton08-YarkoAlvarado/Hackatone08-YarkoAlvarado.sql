-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Product"
(
    id bigint NOT NULL,
    name cstring[] NOT NULL,
    description cstring[],
    price money,
    characteristics character varying[],
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.comments
(
    id bigint,
    content text,
    reported boolean,
    user_id bigint,
    parent_id bigint,
    created_at date,
    product_id bigint,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."user"
(
    id bigint NOT NULL,
    first_name bit varying[] NOT NULL,
    last_name bit varying[] NOT NULL,
    username bit varying[] NOT NULL,
    email bit varying[] NOT NULL,
    password bit varying[] NOT NULL,
    address bit varying[],
    role bit varying NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.payment_method
(
    id bigint,
    nro bit varying[],
    cvv bigint,
    name bit varying,
    date date,
    user_id bigint,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.categories
(
    id bigint,
    name bit varying,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."categories_Product"
(
    categories_id bigint,
    "Product_id" bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.promotion
(
    id bigint,
    name bit varying,
    date_start date,
    date_end date,
    discount double precision,
    description character varying,
    is_active boolean,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."promotion_Product"
(
    id bigint,
    promotion_id bigint,
    "Product_id" bigint NOT NULL,
    extra double precision,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.shopping_cart
(
    id bigint,
    total double precision,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."shopping_cart_Product"
(
    shopping_cart_id bigint,
    "Product_id" bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public."order"
(
    id bigint,
    total double precision,
    user_id bigint,
    payment_method bit varying,
    date date,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."order_Product"
(
    order_id bigint,
    "Product_id" bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.shipping
(
    id bigint,
    order_id bigint,
    person_receives bit varying,
    address bit varying,
    estimated_date date,
    send_date date,
    status bit varying,
    description bit varying,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.comments
    ADD FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.comments
    ADD FOREIGN KEY (parent_id)
    REFERENCES public.comments (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.comments
    ADD FOREIGN KEY (product_id)
    REFERENCES public."Product" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.payment_method
    ADD FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."categories_Product"
    ADD FOREIGN KEY (categories_id)
    REFERENCES public.categories (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."categories_Product"
    ADD FOREIGN KEY ("Product_id")
    REFERENCES public."Product" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."promotion_Product"
    ADD FOREIGN KEY (promotion_id)
    REFERENCES public.promotion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."promotion_Product"
    ADD FOREIGN KEY ("Product_id")
    REFERENCES public."Product" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."shopping_cart_Product"
    ADD FOREIGN KEY (shopping_cart_id)
    REFERENCES public.shopping_cart (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."shopping_cart_Product"
    ADD FOREIGN KEY ("Product_id")
    REFERENCES public."Product" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."order"
    ADD FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."order_Product"
    ADD FOREIGN KEY (order_id)
    REFERENCES public."order" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."order_Product"
    ADD FOREIGN KEY ("Product_id")
    REFERENCES public."Product" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.shipping
    ADD FOREIGN KEY (order_id)
    REFERENCES public."order" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;