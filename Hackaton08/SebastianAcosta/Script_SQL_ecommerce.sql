-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.product
(
    id bigint NOT NULL,
    nombre character varying(100) NOT NULL,
    precio numeric(10, 2) NOT NULL,
    description text,
    stock integer,
    caracteristicas text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."user"
(
    id bigint NOT NULL,
    first_name character varying(100) NOT NULL,
    last_name character varying(100) NOT NULL,
    email character varying(100) NOT NULL,
    direccion character varying(200) NOT NULL,
    password character varying(100) NOT NULL,
    role character varying(100) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.pedido
(
    id bigint NOT NULL,
    user_id bigint NOT NULL,
    cantidad double precision NOT NULL,
    fecha_pedido date NOT NULL,
    payment_method character varying,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Comentario"
(
    id bigint NOT NULL,
    content text NOT NULL,
    reportado boolean,
    user_id bigint NOT NULL,
    parent_id bigint,
    create_at date,
    product_id bigint,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.almacen
(
    id bigint NOT NULL,
    name character varying(100),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.payment_method
(
    id bigint NOT NULL,
    nro character varying NOT NULL,
    cvv bit NOT NULL,
    name character varying NOT NULL,
    date date NOT NULL,
    user_id bigint NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.categoria
(
    id bigint NOT NULL,
    name character varying(100),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.categoria_product
(
    categoria_id bigint NOT NULL,
    product_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.pedido_product
(
    pedido_id bigint NOT NULL,
    product_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.promocion
(
    id bigint NOT NULL,
    name character varying(100),
    description text,
    discount double precision,
    date_start aclitem,
    data_end aclitem,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.promocion_product
(
    id bigint NOT NULL,
    promocion_id bigint NOT NULL,
    product_id bigint NOT NULL,
    extra double precision,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.carrito_compras
(
    id bigint NOT NULL,
    total double precision NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.carrito_compras_product
(
    carrito_compras_id bigint NOT NULL,
    product_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.almacen_product
(
    almacen_id bigint NOT NULL,
    product_id bigint NOT NULL
);

ALTER TABLE IF EXISTS public.pedido
    ADD FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Comentario"
    ADD FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Comentario"
    ADD FOREIGN KEY (parent_id)
    REFERENCES public."Comentario" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Comentario"
    ADD FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.payment_method
    ADD FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.categoria_product
    ADD FOREIGN KEY (categoria_id)
    REFERENCES public.categoria (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.categoria_product
    ADD FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.pedido_product
    ADD FOREIGN KEY (pedido_id)
    REFERENCES public.pedido (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.pedido_product
    ADD FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.promocion_product
    ADD FOREIGN KEY (promocion_id)
    REFERENCES public.promocion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.promocion_product
    ADD FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.carrito_compras_product
    ADD FOREIGN KEY (carrito_compras_id)
    REFERENCES public.carrito_compras (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.carrito_compras_product
    ADD FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.almacen_product
    ADD FOREIGN KEY (almacen_id)
    REFERENCES public.almacen (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.almacen_product
    ADD FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;